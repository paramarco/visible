{
  "name": "n-readlines",
  "version": "0.2.1",
  "description": "Read file line by line without buffering the whole file in memory.",
  "main": "./readlines.js",
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "http://github.com/nacholibre/node-readlines.git"
  },
  "keywords": [
    "read",
    "line",
    "reader",
    "linereader",
    "readfile",
    "linebyline",
    "synchronous",
    "sync",
    "readline",
    "readlines"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "devDependencies": {
    "mocha": "^2.0.1"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha *_test.js"
  },
  "author": {
    "name": "Yoan Arnaudov",
    "email": "jonidev@gmail.com"
  },
  "license": "MIT",
  "readme": "[![Build Status](https://travis-ci.org/nacholibre/node-readlines.svg)](https://travis-ci.org/nacholibre/node-readlines)\n#node-readlines\nReading file line by line may seem like a trivial problem, but in node, there is no straightforward way to do it. There are a lot of libraries using Transform Streams to achieve it, but it seems like a overkill, so I've wrote simple version using only the `filesystem` module of node.\n\nInstall with\n`npm install n-readlines`\n\n---------------------------------------\n\n##Documentation\n###new readlines(filename, [options]);\n###new readlines(fd, [options]);\n\n**Arguments**\n\n* `filename` - String path to the file you want to read from\n* `fd` - File descriptor\n* `options` - Object\n  * `readChunk` - Integer number of bytes to read at once. Default: 1024\n  * `newLineCharacter` - String new line character, only works with one byte characters for now. Default: `\\n` which is `0x0a` hex encoded\n\n`node-readlines` can handle files without newLineCharacter after the last line\n\n---------------------------------------\n\n###readlines.read()\nReturns `buffer` with the line data without the `newLineCharacter` or `false` if end of file is reached.\n\n---------------------------------------\n\n##Example\n```javascript\nvar lineByLine = require('n-readlines');\nvar liner = new lineByLine('./textFile.txt');\n\nvar line;\nvar lineNumber = 0;\nwhile (line = liner.next()) {\n    console.log('Line ' + lineNumber + ': ' + line.toString('ascii'));\n    lineNumber++;\n}\n\nconsole.log('end of line reached');\n```\n",
  "readmeFilename": "README.md",
  "_id": "n-readlines@0.2.1",
  "dist": {
    "shasum": "f0d42392f6dc29c668fc870a7cf5428b7b7eaf7e"
  },
  "_from": "n-readlines@~0.2.0",
  "_resolved": "http://registry.npmjs.org/n-readlines/-/n-readlines-0.2.1.tgz"
}
